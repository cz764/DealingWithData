# Name: Chen Zhu
# ID: cz764, N12166205

Multiple choice (1pt each)
1. Which of the following matches regexp a(ab)*a
aaba
aabbaa
aabababa

2. Which of the following matches regexp ab+c?
abc

3. Which of the following matches regexp a.[bc]+
abc
abbbbbbbb
azc
abcbcbcbc
asccbbbbcbcccc

4. Which of the following matches regexp abc|xyz
abc
xyz
abc|xyz

5. Which of the following matches regexp [a-z]+[\.\?!]
battle!
swamping.
jump up.
undulate?
is.?

6. Which of the following matches regexp [a-zA-Z]*[^,]=
Butt=
FIdDlE7h=
Brittle =
Other.=

7. Which of the following matches regexp (very )+(fat )?(tall|ugly) man
very very fat ugly man
very very very tall man

8. Which of the following matches regexp <[^>]+>
<an xml tag>
<opentag> <closetag>
</closetag>
<with attribute=”77”>

9. Which of the following matches regexp ATG([ACGT]{3})+(TAA|TAG|TGA)
ATGCCCTAG
 
Create Regular Expressions (3pts each)
1. Create a regular expression for any binary string.
^[01]+$

2. Create a regular expression for any binary string of EVEN length
^(00|01|10|11)+$

3. Identify what types of strings the regular expression ([0-9]|[A-F])+ represents, and give some test strings
expressions that contains number or capital letters one or more times
Matches:
231
33212330
2344097
asw2321
00012121212
99Aiwsid
Not Match:
SKSKSKS
$#@!JIU

4. Create a regular expression that will match the following three strings: "pickup truck", "pick up truck", "pick-up truck".
pick[\- ]?up truck

5. Create a regular expression that will match a properly formatted 24-hour time (0:00 ... 23:59)
^([01]?[0-9]{1}|2[0-3]):[0-5][0-9]$

6. Create a regular expression that will match a dollar amount. For example, $3.56 and $1,000,000 are valid amounts, whereas $5.321 and $5,29,40 are not.
^\$0$|(([0-9]{1,3})(,[0-9]{3})*((\.[0-9]{2})$|(,[0-9]{3})$))
#########
test cases:
	$3.56
	$1,000,000
	$22,000,000
	$22,000
	$333,000
	$22,000.34
	$0.1
	$0.10
	$0.0
	$0.00
	$22,999.67

	$2222,000
	$5.321
	$5,29,40

7. I wanted to write a regular expression that finds valid email addresses. I came up with the following regular expression: [a-z]*@([a-z])+(.[a-z]+)+ Unfortunately, my regular expression is problematic. Your task is to create one example of an invalid email address that matches the regular expression above (by invalid I mean a string that cannot be an email address; merely being a non-existent domain or non-existent email account does not mean that the email is invalid) and at least two example cases of valid emails that are not matched by the regex.
invalid: amy.&#@isj.lsi@.kdn.et
valid:  valid@126.com
	xz_zhuchen1314@139.com.cn
	HELLO@YAHOO.COM
